#!/bin/bash

set -eux

# Change directory to repository root.
readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "${SCRIPT_DIR}/.."


TIMESTAMP=$(date --iso-8601=minutes | sed 's/://g' | sed 's/+0000/Z/g')
export DB_PATH="data/store.db"
export DB_COPY_PATH="data/${TIMESTAMP}.db"

set +x
. prod.env
set -x

litestream snapshots -config litestream.yml "${DB_PATH}"

# Retrieve live DB
litestream restore -v -config litestream.yml -o "${DB_COPY_PATH}" "${DB_PATH}"
cp "${DB_COPY_PATH}" "${DB_PATH}"

# Delete entries table.
sqlite3 data/store.db "DROP TABLE entries"

flyctl scale count 0 --app "${FLY_APP_NAME}"

# Reset the fly.io volume.
VOLUME_ID="$(fly volumes list | grep "${FLY_VOLUME_NAME}" | awk '{print $1;}')"
flyctl volumes delete "${VOLUME_ID}" --yes

VOLUME_SIZE_IN_GB=3
FLY_REGION="iad"
fly volumes create "${FLY_VOLUME_NAME}" \
  --region="${FLY_REGION}" \
  --size "${VOLUME_SIZE_IN_GB}"

echo "Replacing remote DB"

litestream replicate -config litestream.yml -exec "sleep 30"

flyctl scale count 1 --app "${FLY_APP_NAME}"
